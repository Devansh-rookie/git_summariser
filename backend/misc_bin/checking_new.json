{
  ".vs/ProjectSettings.json": "{\n  \"CurrentProjectSetting\": \"x64-Release\"\n}",
  ".vs/VSWorkspaceState.json": "{\n  \"ExpandedNodes\": [\n    \"\",\n    \"\\\\problem_sets\"\n  ],\n  \"SelectedNode\": \"\\\\problem_sets\\\\WeirdAlgorithm.cpp\",\n  \"PreviewInSolutionExplorer\": false\n}",
  ".vscode/c_cpp_properties.json": "{\n    \"configurations\": [\n        {\n            \"name\": \"Win32\",\n            \"includePath\": [\n                \"${workspaceFolder}/**\"\n            ],\n            \"defines\": [\n                \"_DEBUG\",\n                \"UNICODE\",\n                \"_UNICODE\"\n            ],\n            \"windowsSdkVersion\": \"10.0.22621.0\",\n            \"compilerPath\": \"C:/MinGW/bin/g++.exe\",\n            \"cStandard\": \"c17\",\n            \"cppStandard\": \"c++20\",\n            \"intelliSenseMode\": \"windows-msvc-x64\"\n        }\n    ],\n    \"version\": 4\n}",
  "995/1.py": "def maximize_difference(n, a, b, i=0, m=0, s=0):\n    # Base case: no more days to consider\n    if i >= n:\n        return m - s\n\n    # Option 1: Monocarp skips this day\n    skip = maximize_difference(n, a, b, i + 1, m, s)\n    \n    # Option 2: Monocarp trains on this day\n    stereocarp_contrib = b[i + 1] if i + 1 < n else 0\n    train = maximize_difference(n, a, b, i + 2, m + a[i], s + stereocarp_contrib)\n    \n    # Return the maximum of the two options\n    return max(skip, train)\n\n# Process multiple test cases\ndef solve():\n    t = int(input())  # Number of test cases\n    results = []\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        # Compute the result for the current test case\n        results.append(maximize_difference(n, a, b))\n    \n    # Print all results\n    for res in results:\n        print(res)\n\n# Example Input/Output\n# Uncomment below lines to run locally\nsolve()\n",
  "995/4.py": "from bisect import bisect_left, bisect_right\n\ndef count_interesting_pairs(t, test_cases):\n    results = []\n    for case in test_cases:\n        n, x, y, a = case\n        S = sum(a)\n        L, R = S - y, S - x\n        a.sort()\n        count = 0\n        \n        for i in range(n):\n            low = L - a[i]\n            high = R - a[i]\n            j_left = bisect_left(a, low, i + 1)\n            j_right = bisect_right(a, high, i + 1)\n            count += j_right - j_left\n        \n        results.append(count)\n    \n    return results\n\nt = int(input())\ntest_cases = []\nfor _ in range(t):\n    n, x, y = map(int, input().split())\n    a = list(map(int, input().split()))\n    test_cases.append((n, x, y, a))\n\nresults = count_interesting_pairs(t, test_cases)\nprint(\"\\n\".join(map(str, results)))\n",
  "CppProperties.json": "{\n  \"configurations\": [\n    {\n      \"inheritEnvironments\": [\n        \"msvc_x64\"\n      ],\n      \"name\": \"x64-Release\",\n      \"includePath\": [\n        \"${env.INCLUDE}\",\n        \"${workspaceRoot}\\\\**\"\n      ],\n      \"defines\": [\n        \"WIN32\",\n        \"NDEBUG\",\n        \"UNICODE\",\n        \"_UNICODE\"\n      ],\n      \"intelliSenseMode\": \"windows-msvc-x64\"\n    }\n  ]\n}",
  "Introduction/chess_queen.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    \n    return 0;\n}",
  "Introduction/coin_piles.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    int t;\n    cin >> t;\n    while(t--){\n        long a, b;\n        cin >> a >> b;\n\n        if(a == b){\n            cout << \"YES\" << endl;\n            continue;\n        }\n        else if(a == b-1 || a-1 == b){\n            cout << \"YES\" << endl;\n        }\n        else{\n            cout << \"NO\" << endl;\n        }\n    }\n    return 0;\n}",
  "Introduction/digit_queries.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    \n    return 0;\n}",
  "Introduction/gray_code.cpp": "#include<bits/stdc++.h>\nusing namespace std;\n\nvoid decToBinary(int n, int maxx)\n{\n    // Size of an integer is assumed to be 32 bits\n    for (int i = maxx; i >= 0; i--) {\n        int k = n >> i;\n        if (k & 1)\n            cout << \"1\";\n        else\n            cout << \"0\";\n    }\n}\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    // og num then n>>1 and take XOR for n\n    // 100110\n    // 010011\n\n    // 110101\n\n    int n;\n    cin >> n;\n    long long maxx = pow(2, n);\n    for(int i=0;i < maxx;i++){\n        long long newnum = (i)^(i>>1);\n        decToBinary(newnum, n-1);\n        cout << endl;\n    }\n    return 0;\n}",
  "Introduction/increasing_array.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\n    int n;\n    cin >> n;\n    vector<int> arr(n);\n    for(int i=0;i < n;i++){\n        cin >> arr[i];\n    }\n\n    int val = arr[0];\n    long long ans = 0;\n    for(int i=1;i < n;i++){\n        if(arr[i] < val){\n            ans += val - arr[i];\n            arr[i] = val;\n        }\n        else val = arr[i];\n    }\n    cout << ans << endl;\n   return 0;\n}",
  "Introduction/missing_number.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    unordered_set<int> s;\n    for(int i=0;i < n-1;i++){\n        int val;\n        cin >> val;\n        s.insert(val);\n    }\n \n    for(int i=1;i <= n;i++){\n        if(s.find(i) == s.end()){\n            cout << i;\n            return 0;\n        }\n    }\n    return 1;\n}\n",
  "Introduction/number_spiral.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    \n    return 0;\n}",
  "Introduction/permutations.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    int n;\n    cin >> n;\n    if(n == 1){\n        cout << \"1\"<<endl;\n        return 0;\n    }\n    if(n <= 3){\n        cout <<\"NO SOLUTION\"<<endl;\n        return 0;\n    }\n    // print all odd then all even numbers\n    // as odd numbers and even number have the difference of 2 and never 1 so we just check if the difference between the last odd and the first even has a difference more than 1 or not\n    // for 4 start from n and subtract till 0\n\n    if(n == 4){\n        cout << \"2 4 1 3\"<< endl;\n        return 0;\n    }\n    for(int i=1;i <= n;i+=2){\n        cout << i << \" \";\n    }\n    for(int i = 2;i <= n;i+=2){\n        cout << i << \" \";\n    }\n    cout << endl;\n    return 0;\n}",
  "Introduction/repetitions.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\n    string s;\n    cin >> s;\n    int ans = 1;\n    for(int i=1; i <s.length();i++){\n        int node = 1;\n        while(i < s.length() && s[i] == s[i-1]){\n            node++;\n            i++;\n        }\n        ans = max(ans, node);\n    }\n    cout << ans<< endl;\n   return 0;\n}",
  "Introduction/string_matching.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    string s;\n    string p;\n\n    cin >> s;\n    cin >> p;\n    int n=0, m=0;\n    int ans = 0;\n    for(int i=0;i < n;i++){\n        int j = i;\n        while(j < m && i+j < n && s[i+j] == p[j]){\n            j++;\n        }\n        if(j == m){\n            i = j;\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}",
  "Introduction/tower_of_hanoi.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\n\nvoid toh(int n, char s, char a, char d){\n    if(n == 1){\n        cout << s << \" \" << d << endl;\n    }\n    else{\n        toh(n-1, s, d, a);\n        cout << s << \" \" << d << endl;\n        toh(n-1, a, s, d);\n    }\n}\n\nint main()\n{\n    cin.tie(0);\n    int n;\n    cin >> n;\n    cout << pow(2, n) - 1 <<endl;\n    toh(n, '1', '2', '3');\n    return 0;\n}",
  "Introduction/trailing_zeros.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    int ans = 0;\n    while(n){\n        n /= 5;\n        ans += n;\n    }\n    cout << ans << endl;\n    return 0;\n}",
  "Introduction/two_knights.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    int n;\n\n    cin >> n;\n\n    for(int i = 1; i <= n;i++){\n        cout << ((long long)i*i*((long long)i*i - 1))/2 - (long long)4*(i-1)*(i-2) << endl;\n    }\n    return 0;\n}",
  "Introduction/word_combinations.cpp": "#include<bits/stdc++.h>\nusing namespace std;\n\nint solve(string &str, vector<string>& arr, int index, string ans, unordered_map<string, int>&dp){\n    int n = arr.size();\n    if(ans.length() > str.length()) return 0;\n    if(ans == str) return 1;\n    if(index == n) return 0;\n    if(dp.find(ans) != dp.end())return dp[ans];\n    int node = 0;\n    for(int i= index;i < n;i++){\n        node += solve(str, arr, i, ans + arr[i], dp);\n    }\n    return dp[ans] = node;\n}\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    string str;\n    cin >> str;\n\n    int k;\n    cin >> k;\n    vector<string> arr;\n    for(int i=0;i < k; i++){\n        string val;\n        cin >> val;\n        arr.push_back(val);\n    }\n\n    // check in how many ways the string can be made using a dp table with unordered_map, string as key\n\n    unordered_map<string, int> dp;\n\n\n    cout << solve(str, arr, 0, \"\", dp) <<endl;\n    return 0;\n}",
  "bit_inversions.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    string s;\n    int m = 0;\n    cin >> s;\n    int n = s.length();\n    cin >> m;\n    vector<int> changes(m, 0);\n\n    for(int i = 0;i < m;i++) cin >> changes[i];\n\n    \n\n    return 0;\n}",
  "goodbye2024/1.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    int t;\n    cin >> t;\n    while(t--){\n        int n;\n        cin >> n;\n        vector<int> arr(n);\n        for(int i=0;i < n;i++) cin >> arr[i];\n\n        // sort(arr.begin(), arr.end());\n\n        // if(arr[0] == arr[n-1]){\n        //     cout << \"YES\\n\";\n        //     continue;\n        // }\n\n        // if(arr[0]*2<= arr[1]){\n        //     cout << \"NO\\n\";\n        // }\n        // else cout << \"YES\\n\";\n        bool possible = false;\n        for(int i=0;i < n-1;i++){\n            if((arr[i] + arr[i+1] > arr[i]) && (arr[i]*2 > arr[i+1])&&(arr[i+1] *2 > arr[i]) && (arr[i]+arr[i+1] > arr[i+1])){\n                possible = true;\n                break;\n            }\n        }\n        if(possible) cout << \"YES\\n\";\n        else cout <<\"NO\\n\";\n    }\n    return 0;\n}",
  "misc/bcount/bcount.in": "6 3\n2\n1\n1\n3\n2\n1\n1 6\n3 3\n2 4",
  "misc/bcount/bcount.out": "3 2 1\n1 0 0\n2 0 1\n",
  "misc/books.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    int n, t;\n    cin >> n >> t;\n    vector<int> arr(n+1);\n    for(int i=0;i < n;i++) cin >> arr[i+1];\n\n    int l = 1;\n    int r = 1;\n    int ans = 0;\n    while(r <= n){\n        if(t >= arr[r]){\n            t-=arr[r];\n            r++;\n        }\n        else{\n            t+= arr[l];\n            l++;\n        }\n        ans = max(ans, r-l);\n    }\n    cout << ans << endl;\n    return 0;\n}",
  "misc/closing/closing.in": "4 3\n1 2\n2 3\n3 4\n3\n4\n1\n2",
  "misc/closing/closing.out": "YES\nNO\nYES\nYES\n",
  "misc/div7/div7.in": "7\n3\n5\n1\n6\n2\n14\n10",
  "misc/div7/div7.out": "5",
  "misc/edu173/1.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\n\nlong long solve(long long n){\n    // if(n <= 4) return 1;\n    // return 2*solve(n/4);\n    long long curr = 1;\n    while(n>=4){\n        curr = 2*curr;\n        n = n/4;\n    }\n    return curr;\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    while(t--){\n        long long n;\n        cin >> n;\n        cout << solve(n)<< '\\n';\n    }\n    return 0;\n}",
  "misc/fenceplan/fenceplan.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    \n\n    return 0;\n}",
  "misc/fenceplan/fenceplan.in": "7 5\n0 5\n10 5\n5 0\n5 10\n6 7\n8 6\n8 4\n1 2\n2 3\n3 4\n5 6\n7 6",
  "misc/lazycow/lazy.in": "5 2\n50 5 25 6 17\n14 3 2 7 21\n99 10 1 2 80\n8 7 5 23 11\n10 0 78 1 9",
  "misc/lazycow/lazy.out": "342",
  "misc/little_girl_max_sum.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int n, q;\n    long long ans = 0;\n    cin >> n >> q;\n    vector<int> arr(n+1, 0);\n    for(int i = 1;i <= n;i++) cin >> arr[i];\n    sort(arr.begin()+1, arr.end());\n    vector<long long> queries(n+2, 0);\n    for(int i = 1;i <= q;i++){\n        int x, y;\n        cin >> x >> y;\n        queries[x]++;\n        queries[y+1]--;\n    }\n\n    for(int i = 1;i <= n;i++) queries[i] += (long long)queries[i-1];\n    sort(queries.begin() + 1, queries.end() - 1);\n    // the queries array tells us how many times the index is repeated in all the queries there we sort it and multiply max value with max value which works\n    // else do it with BIT(Binary Indexed Trees)\n    for(int i = 1;i <= n;i++) ans += (long long)arr[i]*queries[i];\n    cout << ans << endl;\n    return 0;\n}",
  "misc/moocast/moocast.in": "4\n1 3 5\n5 4 3\n7 2 1\n6 1 1",
  "misc/moocast/moocast.out": "3",
  "misc/notlast/notlast.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    ifstream fin(\"notlast.in\");\n    ofstream fin(\"notlast.out\");\n    int n;\n    fin >> n;\n\n    for(){\n        \n    }\n    return 0;\n}",
  "misc/notlast/notlast.in": "",
  "misc/paintbarn/paintbarn.in": "3 2\n1 1 5 5\n4 4 7 6\n3 3 8 7",
  "misc/paintbarn/paintbarn.out": "0 0 0 0 0 0 0 0 0 0 \n0 1 0 0 0 -1 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 1 0 0 0 -1 0 0 \n0 0 0 0 1 0 -1 0 0 0 \n0 -1 0 0 0 1 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 -1 0 1 0 0 0 \n0 0 0 -1 0 0 0 1 0 0 \n0 0 0 0 0 0 0 0 0 0 \n\n\n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 1 1 1 1 0 0 0 0 \n0 0 1 1 1 1 0 0 0 0 \n0 0 1 1 2 2 1 1 0 0 \n0 0 1 1 2 3 2 1 0 0 \n0 0 0 0 1 2 2 1 0 0 \n0 0 0 0 1 2 2 1 0 0 \n0 0 0 0 1 1 1 1 0 0 \n0 0 0 0 0 0 0 0 0 0 \n\n0 0 0 0 0 0 0 0 0 0 \n0 1 1 1 1 0 0 0 0 0 \n0 1 1 1 1 0 0 0 0 0 \n0 1 1 2 2 1 1 0 0 0 \n0 1 1 2 3 2 1 0 0 0 \n0 0 0 1 2 2 1 0 0 0 \n0 0 0 1 2 2 1 0 0 0 \n0 0 0 1 1 1 1 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n8",
  "misc/pairup/pairup.in": "3\n1 8\n2 5\n1 2",
  "misc/pairup/pairup.out": "10\n",
  "misc/permutator.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    \n    return 0;   \n}",
  "misc/test.out": "0 0 0 0 0 0 \n0 1 1 1 2 0 \n0 1 1 1 2 0 \n0 2 1 1 3 0 \n0 0 0 0 0 0 \n3201",
  "misc/usaco/range_sum.cpp": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <string>  \n#include <vector>\n#include <list>        \n#include <set> \n#include <map>    \n#include <queue> \n#include <stack>\n#include <algorithm>  \n#include <cmath> \n#include <ctime> \n#include <cstdlib>\n#include <cstring> \n#include <cctype> \n#include <cassert>\n#include <exception>   \n#include <functional>\n#include <iterator>\n#include <limits>  \n#include <locale>   \n#include <numeric>  \n#include <random> \n#include <stdexcept> \n#include <typeinfo> \n#include <utility>\nusing namespace std;\nint main()\n{\n    int n, q;\n    cin >> n >> q;\n    vector<long> arr(n);\n    for(int i=0;i < n;i++){\n        cin >> arr[i];\n    }\n\n    for(int i=1;i < n;i++){\n        arr[i] = arr[i]+arr[i-1];\n    }\n\n    vector<long> ans(q);\n\n    for(int i=0;i < q;i++){\n        int l, r;\n        cin >> l >> r;\n        ans[i] = (l > 0)?(arr[r-1] - arr[l-1]): arr[r-1];\n    }\n\n    for(long i: ans) cout << i << endl;\n    return 0;\n}",
  "misc/where_am_i/where_am_i.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    ifstream fin(\"whereami.in\");\n    ofstream fout(\"whereami.out\");\n    int n;\n    string s;\n    fin >> n >> s;\n\n    for(int i=0;i < n;i++){\n        unordered_map<string, int> m;\n        // all the substring lengths\n        bool flag = true;\n        for(int j = 0;j < n - i;j++){\n            string s1 = s.substr(j, i+1);\n            m[s1]++;\n            if(m[s1] > 1){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            fout << i+1;\n            return 0;\n        }\n    }\n    return 0;\n}",
  "misc/where_am_i/whereami.in": "7\nABCDABC",
  "misc/where_am_i/whereami.out": "4",
  "problem_sets/.vscode/settings.json": "{\n    \"files.associations\": {\n        \"iostream\": \"cpp\"\n    },\n    \"C_Cpp.errorSquiggles\": \"enabled\"\n}",
  "problem_sets/MissingNumber.cpp": "#include<iostream>\nusing namespace std;\n\nvoid swap(int *x, int *y){\n    int temp = *x;\n    *x=*y;\n    *y=temp;\n}\n\nint main(){\n    int n,j,i;\n    cin>>n;\n    int arr[n];\n    for( i=0;i<n-1;i++) cin>>arr[i];\n    for(i=0;i<n-1;i++){\n        for(j=i;j<n-1;j++) if(arr[j]<arr[i]) swap(&arr[j],&arr[i]);\n    }\n    for (i=0;i<n-1;i++) if (arr[i]!=i+1){\n        cout<<i+1;\n        break;\n    }\n    return 0;\n}",
  "problem_sets/WeirdAlgorithm.cpp": "#include<iostream>\nusing namespace std;\nlong long int recursion(long long int n){\n    if (n==1) return 1;\n    else if(n>0 && n%2==0){\n        cout<<n/2<<\" \";\n        return recursion(n/2);\n    }\n    else {\n        cout<<3*n+1<<\" \";\n        return recursion(3*n+1);\n    }\n}\n\nint main(){\n    long long int n;\n    cin>>n;\n    cout << n<< \" \";\n    recursion(n);\n    return 0;\n}\n",
  "problem_sets/ansh.c": "# include<stdio.h>\n\ttypedef struct address{\n\t\tint houseno;\n\t\tint block;\n\t\tchar city[50];\n\t\tchar state[50];\n\t}add;\n\tint main(){\n\t\tadd op[5];\n\t\tfor(int i=0;i<5;i++){\n\t\t\tprintf(\"enter the house number \");\n\t\t\tscanf(\"%d\",&op[i].houseno);\n\t\t\tprintf(\"enter the block\");\n\t\t\tscanf(\"%d\",&op[i].block);\n\t\t\tprintf(\"enter the city \");\n\t\t\tscanf(\" %[^\\n]s\",op[i].city);\n\t\t\tprintf(\"enter the state\");\n\t\t\tscanf(\" %[^\\n]s\",op[i].state);\n\t\t}\n        return 0;\n\n\t}",
  "problem_sets/compare_strings.c": "#include<stdio.h>\n#include<string.h>\n\nint min(int a,int b){\n    if(a>b) return b;\n    else return a;\n}\n\n\nint max(int a,int b){\n    if(a>b) return a;\n    else return b;\n}\n\nint main(){\n    char a[100],b[100];\n    gets(a);\n    gets(b);\n    char c[100], d[100], e[100];\n    int i,l1,l2,j;\n    for(i=0;a[i]!='\\0';i++);\n    l1=i;\n    for(i=0;b[i]!='\\0';i++);\n    l2=i;\n    int maxi= max(l1,l2);\n    for(i=0;i<maxi;i++){\n        if(a[i]==b[i]) c[i]= a[i];\n    }\n    puts(c);\n    i=0;\n    while(i<maxi){\n        if(c[i]!=b[i]) printf(\"%c\",b[i]);\n        i++;\n    }\n    printf(\"\\n\");\n    i=0;\n    while(i<maxi){\n        if(c[i]!=a[i]) printf(\"%c\",a[i]);\n        i++;\n    }\n    return 0;    \n}\n",
  "problem_sets/cricket.c": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct cricket {\n  char player_name[20];\n  char team_name[20];\n  float batting_avg;\n} cricketer;\n\n\n\nint main(void) {\n  int i = 0, j = 0, n = 10;\n    cricketer player[50];\n  for (i = 0; i < n; i++) {\n    printf(\"\\n Enter Player Name : \");\n    scanf(\"%s\", player[i].player_name);\n    printf(\"\\n Enter Team Name : \");\n    scanf(\"%s\", player[i].team_name);\n    printf(\"\\n Enter Batting Average : \");\n    scanf(\"%f\", & player[i].batting_avg);\n  }\n\n  return 0;\n}\n\n",
  "problem_sets/doc.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    unordered_set<int> s;\n    for(int i=0;i < n-1;i++){\n        int val;\n        cin >> val;\n        s.insert(val);\n    }\n\n    for(int i=1;i <= n;i++){\n        if(s.find(i) == s.end()){\n            cout << i <<endl;\n            return 1;\n        }\n    }\n    return 0;\n}",
  "problem_sets/findmedian.c": "double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size) {\n    long long n_check= nums2[0];\n    long long s=0,l,mid,index;\n    l=nums1Size;\n    mid =(s+l)/2;\n    while(l>=s){\n        if(nums1[mid]>n_check) l=mid-1;\n        else if (nums1[mid]<n_check) s=mid+1;\n        else{\n            index= mid;\n            break;\n        }\n        mid = (s+l)/2;\n    }\n    \n    for(long long i=nums1Size;i>index;i++){\n        \n    }\n\n    if ((nums1Size+nums2Size)%2==0) return(nums1[(nums1Size+nums2Size)/2-1]+nums1[(nums1Size+nums2Size)/2]);\n    else return(nums1[nums1Size+nums2Size]);\n}",
  "problem_sets/increasingarray.cpp": "#include<iostream>\nusing namespace std;\nint main(){\n    long long count=0;\n    long long n;\n    cin>>n;\n    int arr[n];\n    for(long long i=0;i<n;i++) cin>>arr[i];\n    for(long long i=1;i<n;i++){\n        while(arr[i]<=arr[i-1]){\n            arr[i]++;\n            count++;\n        }\n    }\n    cout<<count<<endl;\n    return 0;\n}",
  "problem_sets/repitition.cpp": "#include<iostream>\n#include<string>\nusing namespace  std;\nint main(){\n    long long streak=0,temp=0;\n    string str;\n    cin>>str;// otherwise getline() function is to be used\n\n    for(long long i=0;i<str.size()-1;i++){\n        for(long long j=i;j<str.size();j++){\n            if(str[i]==str[j]){\n                    temp++;\n                    streak=max(temp,streak);\n                }\n            else{\n                    temp=0;\n                    break;\n                }\n        }\n    }\n    cout<<streak<<endl;\n    return 0;\n}\n\nlong long max(long long a,long long b){\n    long long maxi=INT16_MIN;\n    if(a>b) maxi=a;\n    else maxi= b;\n    return maxi;\n}",
  "range_queries/forest_queries.cpp": "// #include<bits/stdc++.h>\n#include<vector>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    int n, q;\n    cin >> n >> q;\n    vector<vector<int>> arr(n+1, vector<int>(n+1, 0));\n\n    for(int i = 1;i <= n;i++){\n        for(int j = 1;j <= n;j++){\n            char c;\n            cin >> c;\n            if(c == '*'){\n                arr[i][j] = 1;\n            }\n        }\n    }\n\n    for(int i = 1;i <= n;i++){\n        for(int j = 1;j <= n;j++){\n            arr[i][j] = arr[i][j] + arr[i-1][j] + arr[i][j-1] - arr[i-1][j-1];\n        }\n    }\n\n    for(int i = 0;i < q;i++){\n        int x1, y1, x2, y2;\n        cin >> x1 >> y1 >> x2 >> y2;\n        cout << arr[x2][y2] - arr[x1-1][y2] - arr[x2][y1-1] + arr[x1-1][y1-1] << endl;\n    }\n\n    return 0;\n}",
  "sorting_searching/concert_tickets.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    int n, m;\n    cin >> n >> m;\n    vector<long long> temp(n, 0);\n    for(int i = 0;i < n;i++){\n        cin >> temp[i];\n    }\n    map<long long, long long> s;\n\n    for(int i = 0;i < n;i++){\n        s[temp[i]]++;\n    }\n\n    vector<long long> arr(m, 0);\n    for(int i = 0;i < m;i++){\n        cin >> arr[i];\n    }\n\n    for(int i = 0;i < m;i++){\n        int val = arr[i];\n        if(s.empty()){cout <<\"-1\\n\"; continue;}\n        auto maxx = s.upper_bound(val);\n\n        if(maxx == s.begin()){\n            cout << \"-1\\n\";\n        }\n        else{\n            maxx--;\n            cout << (maxx->first) << '\\n';\n            s[maxx->first]--;\n            if(!s[maxx->first]) s.erase(maxx);\n        }\n    }\n    return 0;\n}",
  "sorting_searching/room_allocation.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nusing pii = pair<int, int>;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    int n;\n    cin >> n;\n    vector<int> rooms(n, 0);\n    vector<pii> times(n);\n    for(int i = 0;i < n;i++){\n        cin >> times[i].first;\n        cin >> times[i].second;\n    }\n    sort(times.begin(), times.end());\n\n    multiset<int> m;\n\n    for(int i = 0;i < n;i++){\n        \n    }\n    return 0;\n}",
  "sorting_searching/subarray_sum1.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    long long ans = 0;\n    map<long long, long long> m;\n    m[0] = 1;\n    int n, x;\n    cin >> n >> x;\n    vector<int> arr(n);\n    for(int i = 0;i < n;i++) cin >> arr[i];\n\n    long long suma = 0;\n    for(int i = 0;i < n;i++){\n        suma += arr[i];\n        ans += m[suma - x];\n        m[suma]++;\n    }\n    cout << ans << endl;\n    return 0;\n}",
  "sorting_searching/traffic_lights.cpp": "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    int x, n;\n    cin >> x >> n;\n\n    multiset<int> m;\n    m.insert(x);\n\n    set<int> s;\n    s.insert(0);\n    s.insert(x);\n\n    for(int i = 0;i < n;i++){\n        int pos;\n        cin >> pos;\n\n        auto left = s.upper_bound(pos);\n        auto right = left;\n        left--;\n\n        m.erase(m.find((*right) - (*left)));\n        m.insert((*right) - pos);\n        m.insert(pos - (*left));\n        s.insert(pos);\n        cout << *(--m.end()) << ' ';\n    }\n\n    return 0;\n}"
}
