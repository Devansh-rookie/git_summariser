{
  "data": {
    "repository": {
      "object": {
        "entries": [
          { "name": ".github", "type": "tree", "mode": 16384, "object": {} },
          {
            "name": ".gitignore",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": ".env\n.vscode\n.DS_STORE\npnpm-lock.yaml\nyarn.lock\npackage-lock.json\nnode_modules\n.turbo\n",
              "byteSize": 86
            }
          },
          { "name": ".vscode", "type": "tree", "mode": 16384, "object": {} },
          {
            "name": "CODE_OF_CONDUCT.md",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\nWe are committed to creating a welcoming, harassment-free experience for everyone. Contributors pledge to act respectfully and professionally.\n\n## Our Standards\nExamples of behavior that contributes to a positive environment include:\n- Using welcoming and inclusive language.\n- Being respectful of differing viewpoints and experiences.\n- Accepting constructive feedback.\n\nExamples of unacceptable behavior include:\n- The use of sexualized language or imagery.\n- Trolling, insulting/derogatory comments, and personal attacks.\n- Public or private harassment.\n\n## Our Responsibilities\nProject maintainers are responsible for enforcing the code of conduct and may take appropriate action if violations occur.\n\n## Enforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior can be reported by contacting the project team at **hyattherate2005 [at] gmail.com**.\n",
              "byteSize": 929
            }
          },
          {
            "name": "CONTRIBUTING.md",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "# Contributing to NoterAI\n\nThank you for considering contributing to NoterAI! We\u2019re excited to have you on board. Before you start, please read our contribution guidelines carefully.\n\n## Table of Contents\n- [Code of Conduct](#code-of-conduct)\n- [How Can You Contribute?](#how-can-you-contribute)\n- [Getting Started](#getting-started)\n- [Installation Guide](#installation-guide)\n- [Coding Guidelines](#coding-guidelines)\n- [Commit Message Guidelines](#commit-message-guidelines)\n- [Submitting Issues](#submitting-issues)\n- [Pull Request Guidelines](#pull-request-guidelines)\n- [License](#license)\n- [Contact](#contact)\n\n## Code of Conduct\nPlease make sure to review and adhere to our [Code of Conduct](./CODE_OF_CONDUCT.md) to ensure a respectful and welcoming environment for all contributors.\n\n## How Can You Contribute?\nWe appreciate any type of contribution:\n- **Report Bugs**: Submit bugs via our GitHub issue tracker.\n- **Feature Requests**: Have ideas for new features? Share them via GitHub.\n- **Code Contributions**: Help us by fixing bugs, writing new features, or improving the documentation.\n- **Documentation**: Help improve the documentation to make the project more accessible.\n\n## Getting Started\n\n### Prerequisites\nEnsure you have the following installed:\n- **Node.js** (>= version X.X.X)\n- **npm** (>= version X.X.X)\n- **Flutter** (>= version X.X.X)\n- **pnpm** (>= version X.X.X)\n- **Docker** (for setting up Redis and the database)\n\nFor platform-specific requirements:\n- **iOS/macOS**: Xcode for Swift and CocoaPods setup.\n- **Android**: Android Studio and necessary SDKs.\n\n### Tech Stack\n- **Backend**: NestJS, Prisma, Redis\n- **Mobile (Android, Windows, Linux)**: Flutter\n- **iOS, macOS**: Swift\n- **Web**: Next.js\n- **AI**: NestJS (TypeScript), Python\n\n### Packages Structure\n- **<project-root>/dev-docs**: Documentation related to the project.\n- **<project-root>/apps/flutter**: Flutter code for mobile and desktop.\n- **<project-root>/apps/backend**: Backend code organized in a microservices architecture.\n- **<project-root>/apps/swift**: Swift code for iOS/macOS.\n- **<project-root>/apps/web**: Web code (Next.js).\n\nFor detailed installation instructions, refer to the [Installation Guide](./INSTALLATION_GUIDE.md).\n\n## Installation Guide\nRefer to our [Installation Guide](./INSTALLATION_GUIDE.md) for detailed setup instructions.\n\n## Coding Guidelines\nWe follow TDD, clean code principles, and modular architecture. Make sure your code is:\n- Well-documented.\n- Includes tests.\n- Passes linting and formatting checks.\n\nRun the following before committing:\n```bash\npnpm format\npnpm lint\n```\n\n### Pre-Commit Hooks\nWe use pre-commit hooks to ensure code quality:\n```bash\n\"pre-commit\": \"pnpm format && pnpm lint && pnpm build\"\n```\n\n## Commit Message Guidelines\nFollow the [Conventional Commits](https://www.conventionalcommits.org/) format:\n- **feat**: New feature.\n- **fix**: Bug fix.\n- **docs**: Documentation update.\n- **style**: Code formatting changes.\n- **refactor**: Code refactoring without changing functionality.\n- **test**: Adding or modifying tests.\n\n## Submitting Issues\nTo submit an issue, follow these steps:\n1. **Search for duplicates**: Check if an issue already exists.\n2. **Describe the issue**: Provide a detailed description, steps to reproduce, and any relevant screenshots.\n3. **Suggest potential fixes**: If applicable, propose a solution.\n\n## Pull Request Guidelines\n1. Fork the repository and create a new branch.\n2. Write clean, modular, and test-driven code.\n3. Update the documentation if necessary.\n4. Run tests and ensure all checks pass.\n5. Open a pull request with a clear description of the changes.\n\n## License\nThis project is licensed under a **Custom License** that restricts commercial use. See the [LICENSE](./LICENSE) file for more details.\n\n## Contact\nIf you have any questions, feel free to contact us at **hyattherate2005 [at] gmail.com**.\n",
              "byteSize": 3905
            }
          },
          {
            "name": "INSTALLATION_GUIDE.md",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "# Installation Guide for NoterAI\n\nFollow these steps to install and run NoterAI locally.\n\n## Prerequisites\nBefore setting up the project, ensure you have the following installed:\n- **Node.js** (>= X.X.X)\n- **npm** (>= X.X.X)\n- **Flutter** (>= X.X.X)\n- **pnpm** (>= X.X.X)\n- **Docker** (for setting up Redis and Prisma database)\n\n### Platform-specific Requirements\n#### iOS/macOS\n- **Xcode**: Install Xcode via the App Store and ensure that you have the latest version.\n- **CocoaPods**: Run `sudo gem install cocoapods` if not installed.\n\n#### Android\n- **Android Studio**: Install Android Studio and set up the necessary SDKs.\n- Ensure you have **Flutter** installed.\n\n## Step-by-Step Guide\n\n### 1. Clone the Repository\nFirst, clone the repository to your local machine:\n```bash\ngit clone https://github.com/himasnhu-at/noterai.git\ncd noterai\n```\n\n### 2. Install Dependencies\nNavigate to the project root and install the necessary dependencies using `pnpm`:\n```bash\npnpm install\n```\n\n### 3. Set Up the Environment\nCreate a `.env` file in the `/apps/backend` and `/apps/web` directories based on the provided `.env.example` files:\n```bash\ncp apps/backend/.env.example apps/backend/.env\ncp apps/web/.env.example apps/web/.env\n```\nMake sure to configure your Redis and Prisma database URLs.\n\n### 4. Start the Backend and Frontend\nStart both the backend and frontend using Turbo:\n```bash\npnpm dev\n```\n\nAlternatively, use Turbo to run specific parts:\n```bash\n# Backend\nturbo run dev --filter=@noterai/backend\n\n# Web\nturbo run dev --filter=@noterai/web\n```\n\n### 5. Running Flutter\nNavigate to the `/apps/flutter` directory and run the project:\n```bash\nflutter run\n```\nEnsure that you have a connected device or emulator running.\n\n### 6. Database Setup\nEnsure that you have Docker running for Prisma and Redis:\n```bash\ndocker-compose up\n```\n\nThen run migrations:\n```bash\npnpm prisma migrate dev\n```\n\n### 7. Running Tests\nYou can run tests to ensure everything is set up correctly:\n```bash\npnpm test\n```\n\n## Troubleshooting\nIf you encounter issues during setup, please check our [FAQ](./docs/FAQ.md) or open an issue in the GitHub repository.\n",
              "byteSize": 2135
            }
          },
          {
            "name": "LICENSE.md",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "# **NoterAI License Agreement**\n\nThis License Agreement (\"Agreement\") governs the use, distribution, and modification of the NoterAI project and its associated source code, files, and other related materials (collectively, the \"Software\"). By accessing, utilizing, or contributing to this Software, the licensee (\"You\") agrees to adhere to the terms and conditions set forth in this Agreement.\n\n## **1. Grant of License**  \nSubject to the restrictions set forth in this Agreement, the author of the Software (\"Licensor\") hereby grants You a limited, non-exclusive, non-transferable, non-commercial license to use, modify, and distribute the Software solely for personal or non-commercial team purposes, under the following conditions:\n- You are permitted to execute, compile, and use the Software for personal use or within your team for internal, non-commercial purposes only.\n- No rights are granted to use the Software for any commercial purpose without prior written permission from the Licensor.\n\n## **2. Restrictions on Use**  \nThe following restrictions apply to Your use of the Software:\n- **Prohibition of Commercial Exploitation**: You are expressly prohibited from using the Software, in whole or in part, for any commercial purpose, including but not limited to the sale, licensing, distribution, or monetization of the Software or any derivative work thereof, without the express prior written consent of the Licensor.\n- **Prohibition of Unauthorized Distribution**: You may not distribute, publish, sublicense, or otherwise transfer the Software, or any derivative works thereof, under Your name or the name of any other entity without the prior written consent of the Licensor. All rights not expressly granted herein are reserved by the Licensor.\n- **Attribution Requirement**: You must retain all copyright and attribution notices in all copies or substantial portions of the Software and must provide appropriate credit to the original Licensor when redistributing any part of the Software.\n\n## **3. Permitted Use for Personal or Team Purposes**  \nYou are authorized to use the Software solely for:\n- Personal, educational, or non-commercial purposes;\n- Deployment within a team or collaborative setting for non-commercial activities, provided that such use does not involve the sale or commercialization of the Software or its derivative works.\n\n## **4. Licensing of Project Components**  \nThe Software may contain components that are governed by distinct licenses, as specified in their respective directories. Where a component of the Software is subject to a specific license:\n- You must comply with the terms of that specific license when using, modifying, or distributing that component;\n- In the absence of an explicitly defined license for a particular component, the terms of this **NoterAI License Agreement** shall govern its use, modification, and distribution.\n\nExample Licensing Structure:\n- Backend Code: Governed under the Backend License in /<root>/LICENSE.\n- Frontend Code: Governed under the Frontend License in /<root>/LICENSE.\n- AI Components: Governed under the AI License in /<root>/LICENSE.\n- Mobile Code (Flutter): Governed under the Mobile License in /<root>/LICENSE.\n- Swift Code for iOS/macOS: Governed under the iOS/macOS License located in /<root>/LICENSE.\n\nIn the event of any conflict between this Agreement and a specific license, the terms of the specific license shall take precedence solely with respect to the component covered by that license.\n\n## **5. No Warranty and Limitation of Liability**  \nThe Software is provided on an \"AS IS\" basis, without warranties or conditions of any kind, either express or implied, including but not limited to any warranties of merchantability, fitness for a particular purpose, or non-infringement. The Licensor shall not be liable for any damages, claims, or liabilities arising from the use or inability to use the Software, whether in contract, tort, or any other legal theory.\n\n## **6. Termination**  \nYour rights under this Agreement will terminate automatically and immediately without notice from the Licensor if You fail to comply with any term or condition of this Agreement. Upon termination, You shall cease all use of the Software and destroy all copies, full or partial, of the Software in Your possession.\n\n## **7. Governing Law**  \nThis Agreement shall be governed by and construed in accordance with the laws of the jurisdiction in which the Licensor resides, without regard to its conflicts of law provisions.\n\n## **8. Contact Information**  \nFor any inquiries or clarifications regarding this Agreement, You may contact the Licensor at **hyattherate2005@gmail.com**.\n\n---\n\nSigned,  \n**Himanshu**  \nLicensor\n",
              "byteSize": 4717
            }
          },
          {
            "name": "SECURITY.md",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "# Security Policy\n\n## Supported Versions\n\nAs of now, **NoterAI** does not have any officially released versions. Once we release our first version, this section will be updated to reflect which versions are actively supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| N/A     | :white_check_mark: |\n| N/A     | :x:                |\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability in NoterAI, we encourage you to report it responsibly. Please follow these steps:\n\n1. **Contact**: Report the vulnerability by emailing us at **hyattherate2005 [at] gmail.com** with the subject line \"Security Vulnerability Report\".\n2. **Provide Details**: Include as much information as possible regarding the vulnerability, including:\n   - A detailed description of the issue.\n   - Steps to reproduce the vulnerability (if applicable).\n   - Any potential risks or impacts you\u2019ve identified.\n3. **Confirmation**: Once we receive your report, we will acknowledge receipt within 48 hours.\n4. **Investigation**: We will conduct an internal investigation to verify and assess the vulnerability.\n5. **Updates**: We will provide regular updates on the status of the investigation and any actions taken to address the vulnerability.\n6. **Resolution**: After resolving the issue, we will notify you of the fix and release a security patch (if necessary). In some cases, we may publicly acknowledge your contribution, depending on your preferences.\n\nThank you for helping us maintain the security of NoterAI.\n",
              "byteSize": 1556
            }
          },
          {
            "name": "USAGE_GUIDE.md",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "# NoterAI Usage Guide\n\nWelcome to the NoterAI usage guide! This document will walk you through the main features and functionalities of NoterAI and how to effectively use them.\n\n## Table of Contents\n- [Creating and Managing Notes](#creating-and-managing-notes)\n- [Using AI-Powered Summarization](#using-ai-powered-summarization)\n- [Generating Quizzes](#generating-quizzes)\n- [Asking Questions (Q&A)](#asking-questions-qna)\n- [Viewing Interesting Facts](#viewing-interesting-facts)\n- [Voice Input for Notes](#voice-input-for-notes)\n- [Accessing the App](#accessing-the-app)\n- [Settings and Customizations](#settings-and-customizations)\n\n## Creating and Managing Notes\n\n### 1. **Creating Notes**\nNoterAI provides a Notion-like interface for creating notes. You can start by:\n- Clicking the \"New Note\" button on the dashboard.\n- Adding a title and typing your content in the note editor.\n- Using rich text features like headings, bold, italics, lists, etc., to format your notes.\n\n### 2. **Organizing Notes**\nYou can organize your notes in folders or tag them to make them easily searchable. To add a folder:\n- Navigate to \"Folders\" on the left sidebar and click \"Create Folder.\"\n- Drag and drop notes into folders or assign tags during note creation.\n\n### 3. **Editing and Deleting Notes**\nTo edit a note:\n- Open the note you want to modify.\n- Click on the text and make your changes.\nTo delete a note:\n- Click the three-dot menu next to the note title and select \"Delete.\"\n\n## Using AI-Powered Summarization\n\nNoterAI uses AI to help you quickly summarize your notes. Here\u2019s how:\n1. Open a note you\u2019d like summarized.\n2. Click on the **\"Summarize\"** button at the top of the note.\n3. The AI will generate a brief summary based on the content of the note, which will appear at the bottom of the page.\n\nYou can save or modify the summary if needed.\n\n## Generating Quizzes\n\nNoterAI helps you create quizzes from your notes for better retention. To generate quizzes:\n1. Select the note from which you want to create a quiz.\n2. Click on the **\"Generate Quiz\"** button.\n3. The AI will generate multiple-choice questions (MCQs) based on the content of your note.\n4. You can take the quiz directly within the app, or you can save it for later.\n\nYou can also customize the quiz questions before starting the quiz.\n\n## Asking Questions (Q&A)\n\nIf you have specific questions based on your notes, NoterAI\u2019s Q&A feature can provide instant answers:\n1. Open a note or folder of notes.\n2. Use the **\"Ask AI\"** button to type your question.\n3. The AI will scan the relevant notes and provide an answer based on the content.\n\nThe Q&A feature is designed to help you clarify points or dive deeper into your study material.\n\n## Viewing Interesting Facts\n\nTo keep you motivated, NoterAI offers interesting facts related to your study topics:\n1. After taking notes or summarizing content, you\u2019ll occasionally see a pop-up or notification containing an interesting fact.\n2. These facts are tailored to the subject or field you\u2019re studying, helping you stay engaged and inspired.\n\nYou can also view a list of motivational and study-related facts in the \"Motivation\" section of the app.\n\n## Voice Input for Notes\n\nNoterAI allows you to create notes using your voice:\n1. Click the **microphone icon** in the note editor.\n2. Speak clearly, and the app will transcribe your speech into text in real-time.\n3. Once done, review and edit the text as needed.\n\nThis feature is useful for quick note-taking during lectures or brainstorming sessions.\n\n## Accessing the App\n\n### Web\nYou can access the NoterAI web app by visiting [NoterAI's web portal](https://noterai.vercel.app/) on any browser.\n\n### Mobile (iOS/Android)\n- Download the **NoterAI** app from the [App Store](#) or [Google Play Store](#) (NOT PUBLISHED).\n- Log in or sign up to start taking notes, generating quizzes, and using AI-powered features.\n\n### Desktop\nFor desktop platforms (Windows, Linux, macOS), download the Flutter-based app from our [downloads page](#) (TODO).\n\n## Settings and Customizations\n\nYou can customize various aspects of the NoterAI experience:\n- **Themes**: Switch between light, dark, or custom themes via the \"Settings\" menu.\n- **Note Layouts**: Choose from different layouts for organizing and viewing your notes.\n- **Notification Settings**: Enable or disable motivational facts and quiz reminders.\n- **Account Settings**: Manage your personal details, password, and email notifications under \"Account.\"\n\n## Troubleshooting and Support\n\nIf you encounter any issues while using the app:\n1. Visit our [FAQ section](./docs/FAQ.md) for common solutions.\n2. If your issue persists, create an issue on our [GitHub repository](https://github.com/Himasnhu-AT/noterAI/issues/new).\n\nFor further assistance, contact us at **hyattherate2005 [at] gmail.com**.\n",
              "byteSize": 4818
            }
          },
          { "name": "apps", "type": "tree", "mode": 16384, "object": {} },
          { "name": "assets", "type": "tree", "mode": 16384, "object": {} },
          { "name": "dev-docs", "type": "tree", "mode": 16384, "object": {} },
          { "name": "docker", "type": "tree", "mode": 16384, "object": {} },
          {
            "name": "package.json",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "{\n  \"name\": \"@noterai/monorepo\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Alternative of Notion, with cool features and AI functionality\",\n  \"author\": {\n    \"name\": \"Himanshu\",\n    \"email\": \"hyattherate2005@gmail.com\",\n    \"url\": \"https://github.com/Himasnhu-AT\"\n  },\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"pre-commit\": \"pnpm format && pnpm lint && pnpm build\",\n    \"build\": \"turbo run build\",\n    \"prod\": \"turbo run start\",\n    \"dev\": \"turbo run dev\",\n    \"backend:dev\": \"turbo run dev --filter=@noterai/backend\",\n    \"backend:prod\": \"turbo run prod --filter=@noterai/backend\",\n    \"backend:build\": \"turbo run build --filter=@noterai/backend\",\n    \"frontend:dev\": \"turbo run dev --filter=@noterai/web\",\n    \"frontend:prod\": \"turbo run prod --filter=@noterai/web\",\n    \"frontend:build\": \"turbo run build --filter=@noterai/web\",\n    \"docs:dev\": \"turbo run dev --filter=@noterai/docs\",\n    \"docs:prod\": \"turbo run prod --filter=@noterai/docs\",\n    \"docs:build\": \"turbo run build --filter=@noterai/docs\",\n    \"lint\": \"turbo run lint\",\n    \"format\": \"turbo run format\",\n    \"test\": \"jest\"\n  },\n  \"workspaces\": [\n    \"apps/*\",\n    \"packages/*\",\n    \"dev-docs\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/Himasnhu-AT/noterAI.git\"\n  },\n  \"keywords\": [\n    \"Editor\",\n    \"Notion\",\n    \"OpenSource\",\n    \"notes\"\n  ],\n  \"packageManager\": \"pnpm@9.11.0\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Himasnhu-AT/noterAI/issues\"\n  },\n  \"homepage\": \"https://github.com/Himasnhu-AT/noterAI#readme\",\n  \"devDependencies\": {\n    \"turbo\": \"^2.1.3\"\n  }\n}\n",
              "byteSize": 1588
            }
          },
          {
            "name": "pnpm-workspace.yaml",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "packages:\n  - \"apps/backend\"\n  - \"apps/web\"\n  - \"apps/docs\"\n  - \"packages/*\"\n  - \"dev-docs\"\n",
              "byteSize": 92
            }
          },
          {
            "name": "readme.md",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "# NoterAI\n\n**NoterAI** helps students learn better by enabling them to take notes using a Notion-like UI or their voice. The platform leverages AI to summarize notes, generate quizzes, answer questions based on the notes, and keep students motivated with interesting facts related to their study topics.\n\n## Table of Contents\n- [Features](#features)\n- [Tech Stack](#tech-stack)\n- [Installation Guide](#installation-guide)\n- [Usage](#usage)\n- [Contributing](#contributing)\n- [License](#license)\n- [Contact](#contact)\n- [Acknowledgments](#acknowledgments)\n\n## Features\n- **Note-Taking**: Create and organize notes using a Notion-like interface or via voice input.\n- **Summarization**: Use AI to summarize your notes automatically.\n- **Quizzes**: Generate quizzes from your notes to help with revision.\n- **Q&A**: Ask questions and get answers based on your saved notes.\n- **Strange Facts**: Stay motivated with interesting facts relevant to your study topics.\n\n## Tech Stack\n- **Backend**: NestJS, Prisma, Redis\n- **Mobile (Android, Windows, Linux)**: Flutter\n- **iOS/macOS**: Swift\n- **Web**: Next.js\n- **AI**: NestJS (TypeScript) for main logic, Python for AI functionalities\n\n## Installation Guide\nTo get NoterAI running locally, follow these steps:\n\n### Prerequisites\nEnsure you have the following installed:\n- **Node.js** (>= X.X.X)\n- **npm** (>= X.X.X)\n- **pnpm** (>= X.X.X)\n- **Flutter** (>= X.X.X)\n- **Docker** (for Redis and database setup)\n\n### Clone the Repository\n```bash\ngit clone https://github.com/himasnhu-at/noterai.git\ncd noterai\n```\n\n### Install Dependencies\nUse `pnpm` to install all required dependencies:\n```bash\npnpm install\n```\n\n### Set Up the Environment\nCreate `.env` files for both the backend and web apps:\n```bash\ncp apps/backend/.env.example apps/backend/.env\ncp apps/web/.env.example apps/web/.env\n```\nFill out the environment variables such as database URLs, Redis configurations, etc.\n\n### Start Development Environment\nTo start the backend and frontend:\n```bash\npnpm dev\n```\nYou can also use Turbo for specific services:\n```bash\n# Backend\nturbo run dev --filter=@noterai/backend\n\n# Web\nturbo run dev --filter=@noterai/web\n```\n\n### Running Flutter\nFor mobile or desktop development:\n```bash\ncd apps/flutter\nflutter run\n```\n\nEnsure that you have a device or emulator running for Flutter.\n\n### Database Setup\nStart the required services with Docker and set up the database:\n```bash\ndocker-compose up\npnpm prisma migrate dev\n```\n\nFor a more detailed setup guide, refer to our [Installation Guide](./INSTALLATION_GUIDE.md).\n\n## Usage\nOnce the project is set up, you can access different features through the frontend or mobile app. Follow the [Usage Guide](./docs/usage.md) to learn how to utilize NoterAI's full range of functionalities, including note-taking, quiz generation, and AI-powered summaries.\n\n## Contributing\nWe welcome contributions! Please review our [Contributing Guidelines](./CONTRIBUTING.md) before making any contributions. Make sure to also check out the [Code of Conduct](./CODE_OF_CONDUCT.md).\n\n### Quick Commands\nHere are some common commands to help you contribute:\n\n- Start the development environment:\n\n```bash\npnpm dev\n```\n\n- Run tests:\n\n```bash\npnpm test\n```\n\n- Format and lint code:\n\n```bash\npnpm format && pnpm lint\n```\n\n## License\nThis project is licensed under a **Custom License** that restricts commercial use. For more information, see the [LICENSE](./LICENSE) file.\n\n## Contact\nIf you have any questions or need support, feel free to reach out at **hyattherate2005 [at] gmail.com**.\n\n## Acknowledgments\nWe would like to thank all the contributors who helped in developing NoterAI. Special thanks to the AI community for their resources and support.\n\nEnjoy using NoterAI and enhance your learning experience!\n",
              "byteSize": 3772
            }
          },
          {
            "name": "setup.bat",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "@echo off\n\nsetlocal\n\n:backend\necho Running backend setup...\ndocker-compose -f ./docker/docker-compose-backend.yml up -d\n\n:frontend\necho Running frontend setup...\ndocker-compose -f ./docker/docker-compose-frontend.yml up -d\n\n:db\necho Running dB setup...\ndocker-compose -f ./docker/docker-compose-dB.yml up -d\n\nif \"%1\"==\"backend\" (\n    if exist .env.frontend (\n        echo .env.frontend file found.\n    ) else (\n        echo .env.frontend file not found. Setting up environment...\n        echo PORT=4000\n        echo DATABASE_PORT=5432\n        echo DATABASE_USERNAME=postgres\n        echo DATABASE_PASSWORD=pass\n        echo DATABASE_NAME=db\n        echo DATABASE_URL=\"postgresql://postgres:pass@localhost:5432/db?schema=public\"\n        echo REDDIS_URL=\"redis://localhost:6379\"\n        echo JWT_SECRET='super-secret'\n        echo JWT_EXPIRES_IN=604800\n        echo EMAIL_ADDRESS=\n        echo EMAIL_PASSWORD= # pass app-password if 2FA is enabled\n        echo. > ./docker/.env.frontend\n    )\n    goto backend\n)\n\nif \"%1\"==\"frontend\" (\n    if exist .env.frontend (\n        echo .env.frontend file found.\n    ) else (\n        echo .env.frontend file not found. Setting up environment...\n        echo. > ./docker/.env.frontend\n    )\n    goto frontend\n)\n\nif \"%1\"==\"db\" (\n    goto db\n)\n\nif \"%1\"==\"all\" (\n    echo Running all setup...\n    goto backend\n    goto frontend\n    goto db\n)\n\necho ERROR:\necho Please provide the correct argument.\necho Example:\necho.\necho 1:   ./setup.bat backend    # setup backend\necho 2:   ./setup.bat frontend   # setup frontend\necho 3:   ./setup.bat db         # setup dB\necho 4:   ./setup.bat all        # setup all\n\nendlocal",
              "byteSize": 1648
            }
          },
          {
            "name": "setup.sh",
            "type": "blob",
            "mode": 33261,
            "object": {
              "text": "#!/bin/bash\n\nfun_backend() {\n    echo \"Running backend setup...\"\n    docker compose -f ./docker/docker-compose-backend.yml up -d\n}\n\nfun_frontend() {\n    echo \"Running frontend setup...\"\n    docker compose -f ./docker/docker-compose-frontend.yml up -d    \n}\n\nfun_db() {\n    echo \"Running dB setup...\"\n    docker compose -f ./docker/docker-compose-dB.yml up -d \n}\n\nif [ \"$1\" == \"backend\" ]; then\n    if [ -f .env.frontend ]; then\n        echo \".env.frontend file found.\"\n    else\n        echo \".env.frontend file not found. Setting up environment...\"\n        echo \"PORT=4000\n\nDATABASE_PORT=5432\nDATABASE_USERNAME=postgres\nDATABASE_PASSWORD=pass\nDATABASE_NAME=db\n\nDATABASE_URL=\"postgresql://postgres:pass@localhost:5432/db?schema=public\"\nREDDIS_URL=\"redis://localhost:6379\"\n\nJWT_SECRET='super-secret'\nJWT_EXPIRES_IN=604800\n\nEMAIL_ADDRESS=\nEMAIL_PASSWORD= # pass app-password if 2FA is enabled\" > ./docker/.env.frontend\n    fi\n    fun_backend\n\nelif [ \"$1\" == \"frontend\" ]; then\n    if [ -f .env.frontend ]; then\n        echo \".env.frontend file found.\"\n    else\n        echo \".env.frontend file not found. Setting up environment...\"\n        echo \"\" > ./docker/.env.frontend\n    fi\n    fun_frontend\n\nelif [ \"$1\" == \"db\" ]; then\n    fun_db\n\nelif [ \"$1\" == \"all\" ]; then\n    echo \"Running all setup...\"\n    fun_backend\n    fun_frontend\n    fun_db\n\nelse\n    echo \"\n    ERROR:\n    Please provide the correct argument.\n    Example:\n    \n    1:   ./setup.sh backend    # setup backend\n    2:   ./setup.sh frontend   # setup frontend\n    3:   ./setup.sh db         # setup dB\n    4:   ./setup.sh all        # setup all\n\n    \"\nfi",
              "byteSize": 1616
            }
          },
          {
            "name": "turbo.json",
            "type": "blob",
            "mode": 33188,
            "object": {
              "text": "{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"tasks\": {\n    \"build\": {\n      \"dependsOn\": [\n        \"^build\",\n        \"build:main\",\n        \"build:ai-service\",\n        \"build:collab_tools\",\n        \"build:content_mgmt\",\n        \"build:sharing_publishing_integration\"\n      ],\n      \"cache\": true\n    },\n    \"build:main\": {\n      \"cache\": true\n    },\n    \"build:ai-service\": {\n      \"cache\": true\n    },\n    \"build:collab_tools\": {\n      \"cache\": true\n    },\n\n    \"build:content_mgmt\": {\n      \"cache\": true\n    },\n    \"build:sharing_publishing_integration\": {\n      \"cache\": true\n    },\n    \"dev\": {\n      \"dependsOn\": [\n        \"^dev\",\n        \"dev:main\",\n        \"dev:ai-service\",\n        \"dev:collab_tools\",\n        \"dev:content_mgmt\",\n        \"dev:sharing_publishing_integration\"\n      ],\n      \"cache\": true\n    },\n    \"dev:main\": {\n      \"cache\": true\n    },\n    \"dev:ai-service\": {\n      \"cache\": true\n    },\n    \"dev:collab_tools\": {\n      \"cache\": true\n    },\n\n    \"dev:content_mgmt\": {\n      \"cache\": true\n    },\n    \"dev:sharing_publishing_integration\": {\n      \"cache\": true\n    },\n    \"start\": {\n      \"dependsOn\": [\n        \"build\",\n        \"^start\",\n        \"prod:main\",\n        \"prod:ai-service\",\n        \"prod:collab_tools\",\n        \"prod:content_mgmt\",\n        \"prod:sharing_publishing_integration\"\n      ],\n      \"cache\": true\n    },\n    \"prod:main\": {\n      \"cache\": true\n    },\n    \"prod:ai-service\": {\n      \"cache\": true\n    },\n    \"prod:collab_tools\": {\n      \"cache\": true\n    },\n\n    \"prod:content_mgmt\": {\n      \"cache\": true\n    },\n    \"prod:sharing_publishing_integration\": {\n      \"cache\": true\n    },\n    \"test\": {\n      \"dependsOn\": [\"^test\"],\n      \"cache\": true\n    },\n    \"lint\": {\n      \"dependsOn\": [\"^lint\"],\n      \"cache\": true\n    },\n    \"format\": {\n      \"dependsOn\": [\"^format\"],\n      \"cache\": true\n    }\n  }\n}\n",
              "byteSize": 1861
            }
          }
        ]
      }
    }
  }
}
